%import common.INT
%import common.DIGIT
%import common.LCASE_LETTER

_SPACE: " "

?dollar_line: "$" _SPACE value
?value: strict
      | "(" (strict | loose) _SPACE? ")"
?strict: state_line | ruling | image
loose.-2: free_text


state_line: QUALIFICATION [_SPACE extent] [_SPACE scope] [_SPACE STATE] [_SPACE DOLLAR_STATUS]
          | extent [_SPACE scope] [_SPACE STATE] [_SPACE DOLLAR_STATUS] -> state_line_extent
          | scope [_SPACE STATE] [_SPACE DOLLAR_STATUS] -> state_line_scope
          | STATE [_SPACE DOLLAR_STATUS] -> state_line_state
          | DOLLAR_STATUS -> state_line_status

QUALIFICATION : "at least" | "at most" | "about"

?extent: INT | range | EXTENT
EXTENT: "several" | "some" |  "rest of" | "start of" | "beginning of" | "middle of" | "end of"
range.2: INT _SPACE? "-" _SPACE? INT

?scope: SCOPE | object | surface
SCOPE:  "column" | "columns" | "lines" | "line" | "lines" | "case" | "cases" | "surface" | "side" | "excerpt"

?object: OBJECT | generic_object | fragment
OBJECT: "tablet" | "envelope" | "prism" | "bulla"
fragment: "fragment" _SPACE free_text
generic_object : OBJECT_GENERIC _SPACE free_text
OBJECT_GENERIC : "object"
free_text.-2 : /./+

?surface: SURFACE | generic_surface | face | edge
SURFACE: "obverse" | "reverse" | "left" | "right" | "top" | "bottom" | "face" | "edge"
face: "face" _SPACE LCASE_LETTER
edge: "edge" _SPACE LCASE_LETTER
generic_surface : SURFACE_GENERIC _SPACE free_text
SURFACE_GENERIC : "surface"

STATE: "blank" | "broken" | "effaced" | "illegible" | "missing" | "traces"
     | "omitted" | "continues"

DOLLAR_STATUS: "*" | "?" | "!" | "!?"


ruling : RULING_NUMBER _SPACE RULING
RULING_NUMBER : "single" | "double" | "triple"
RULING : "ruling"


image : "(" [_SPACE] "image " DIGIT [LCASE_LETTER] " = " free_text ")"
